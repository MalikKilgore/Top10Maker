[{"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\index.tsx":"1","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\reportWebVitals.ts":"2","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\App.tsx":"3","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\List.tsx":"4","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\ListItem.tsx":"5","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Social.tsx":"6","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Share.tsx":"7","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\SearchResults.tsx":"8","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Popper.tsx":"9"},{"size":504,"mtime":1610162347478,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":486,"mtime":1610506954579,"results":"13","hashOfConfig":"11"},{"size":1913,"mtime":1610942928660,"results":"14","hashOfConfig":"11"},{"size":3009,"mtime":1611373134887,"results":"15","hashOfConfig":"11"},{"size":2150,"mtime":1611206678989,"results":"16","hashOfConfig":"11"},{"size":263,"mtime":1610422235710,"results":"17","hashOfConfig":"11"},{"size":875,"mtime":1611207067521,"results":"18","hashOfConfig":"11"},{"size":1058,"mtime":1611368113473,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"y4c434",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\index.tsx",[],["42","43"],"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\reportWebVitals.ts",[],"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\App.tsx",[],"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\List.tsx",["44","45","46","47"],"import React, { useState } from \"react\";\r\nimport \"../css/List.css\";\r\nimport ListItem from \"./ListItem\";\r\nimport {\r\n  DndContext,\r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n} from \"@dnd-kit/core\";\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  sortableKeyboardCoordinates,\r\n  verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\nimport { useDraggable } from \"@dnd-kit/core\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n\r\nfunction List() {\r\n  const [items, setItems] = useState([\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"10\",\r\n  ]);\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const { attributes, listeners, setNodeRef, transform } = useDraggable({\r\n    id: \"unique-id\",\r\n  });\r\n  const style = {\r\n    transform: CSS.Translate.toString(transform),\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-Root\">\r\n      <div className=\"list-Header\">\r\n      </div>\r\n      <div className=\"list-Main\">\r\n        <DndContext\r\n          sensors={sensors}\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n        >\r\n          <SortableContext items={items} strategy={verticalListSortingStrategy}>\r\n            {items.map((id) => (\r\n              <ListItem key={id} id={id} />\r\n            ))}\r\n          </SortableContext>\r\n        </DndContext>\r\n      </div>\r\n      <div className=\"list-Footer\"></div>\r\n    </div>\r\n  );\r\n  function handleDragEnd(event: any) {\r\n    const { active, over } = event;\r\n\r\n    if (active.id !== over.id) {\r\n      setItems((items) => {\r\n        const oldIndex = items.indexOf(active.id);\r\n        const newIndex = items.indexOf(over.id);\r\n\r\n        return arrayMove(items, oldIndex, newIndex);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default List;\r\n","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\ListItem.tsx",[],"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Social.tsx",["48","49","50","51"],"import React, { useState } from 'react'\r\nimport '../css/Social.css';\r\nimport SearchResults from \"./SearchResults\";\r\nimport {\r\n    DndContext,\r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from \"@dnd-kit/core\";\r\nimport {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\nimport { useDraggable } from \"@dnd-kit/core\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n\r\nfunction Social() {\r\n    const [results, setResults] = useState([\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"10\",\r\n    ]);\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n            coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n    );\r\n    const { attributes, listeners, setNodeRef, transform } = useDraggable({\r\n        id: \"unique-id\",\r\n    });\r\n    const style = {\r\n        transform: CSS.Translate.toString(transform),\r\n    };\r\n\r\n    return (\r\n        <div className=\"resultRoot\">\r\n            <div className=\"resultsContainer\">\r\n                <DndContext\r\n                    sensors={sensors}\r\n                    collisionDetection={closestCenter}\r\n                    onDragEnd={handleDragEnd}\r\n                >\r\n                    <SortableContext items={results} strategy={verticalListSortingStrategy}>\r\n                        {results.map((id) => (\r\n                            <SearchResults key={id} id={id} />\r\n                        ))}\r\n                    </SortableContext>\r\n                </DndContext>\r\n            </div>\r\n        </div>\r\n    )\r\n    function handleDragEnd(event: any) {\r\n        const { active, over } = event;\r\n\r\n        if (active.id !== over.id) {\r\n            setResults((results) => {\r\n                const oldIndex = results.indexOf(active.id);\r\n                const newIndex = results.indexOf(over.id);\r\n\r\n                return arrayMove(results, oldIndex, newIndex);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Social;","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Share.tsx",[],"C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\SearchResults.tsx",["52","53","54","55","56"],"import React, {useState} from 'react'\r\nimport \"../css/SearchResult.css\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { type } from \"os\";\r\n\r\nfunction SearchResults(props: any){\r\n    const [search, setSearch] = useState(``)\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n      } = useSortable({ id: props.id });\r\n    \r\n      const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n      };\r\n\r\n    return (\r\n        <div className=\"searchRoot\" ref={setNodeRef} style={style}>\r\n            <img className=\"gameCover\" alt=\"Game cover search result\" src=\"\"></img>\r\n            <div className=\"gameTitle\"></div>\r\n            <div className=\"gameDesc\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;\r\n","C:\\Users\\malik\\Desktop\\Coding Projects\\React Projects\\top10s\\src\\components\\Popper.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":41,"column":11,"nodeType":"63","messageId":"64","endLine":41,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":41,"column":23,"nodeType":"63","messageId":"64","endLine":41,"endColumn":32},{"ruleId":"61","severity":1,"message":"66","line":41,"column":34,"nodeType":"63","messageId":"64","endLine":41,"endColumn":44},{"ruleId":"61","severity":1,"message":"67","line":44,"column":9,"nodeType":"63","messageId":"64","endLine":44,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":40,"column":13,"nodeType":"63","messageId":"64","endLine":40,"endColumn":23},{"ruleId":"61","severity":1,"message":"65","line":40,"column":25,"nodeType":"63","messageId":"64","endLine":40,"endColumn":34},{"ruleId":"61","severity":1,"message":"66","line":40,"column":36,"nodeType":"63","messageId":"64","endLine":40,"endColumn":46},{"ruleId":"61","severity":1,"message":"67","line":43,"column":11,"nodeType":"63","messageId":"64","endLine":43,"endColumn":16},{"ruleId":"61","severity":1,"message":"68","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"61","severity":1,"message":"69","line":8,"column":12,"nodeType":"63","messageId":"64","endLine":8,"endColumn":18},{"ruleId":"61","severity":1,"message":"70","line":8,"column":20,"nodeType":"63","messageId":"64","endLine":8,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":10,"column":9,"nodeType":"63","messageId":"64","endLine":10,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":11,"column":9,"nodeType":"63","messageId":"64","endLine":11,"endColumn":18},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'attributes' is assigned a value but never used.","Identifier","unusedVar","'listeners' is assigned a value but never used.","'setNodeRef' is assigned a value but never used.","'style' is assigned a value but never used.","'type' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]